{"version":3,"sources":["webpack:///./pages/index.js?f7ee"],"names":["Wrapper","styled","div","IndexPage","state","baseUrl","albums","createAlbums","map","id","title","photos","pathname","query","url","update","setState","data","fetch","then","res","json","console","log","props","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAMA,UAAU,kEAAAC,CAAOC,GAAjB;AAAA;AAAA;AAAA,iDAAN;;IAMMC,S;;;;;;;;;;;;;;gMACFC,K,GAAQ;AACJC,qBAAS,EADL;AAEJC,oBAAQ;AAFJ,S,QAKRC,Y,GAAe,UAACD,MAAD,EAASD,OAAT,EAAqB;AAChC,mBAAOC,OAAOE,GAAP,CAAW,iBAAyB;AAAA,oBAAvBC,EAAuB,SAAvBA,EAAuB;AAAA,oBAAnBC,KAAmB,SAAnBA,KAAmB;AAAA,oBAAZC,MAAY,SAAZA,MAAY;;AACvC,uBACI,4DAAC,sEAAD;AACI,yBAAKF,EADT;AAEI,wBAAIA,EAFR;AAGI,0BAAM,EAACG,UAAU,QAAX,EAAqBC,OAAO,EAACJ,MAAD,EAA5B,EAHV;AAII,2BAAOC,KAJX;AAKI,8BAAUC,OAAO,CAAP,EAAUG,GALxB;AAMI,6BAAST,OANb;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAUH,aAXM,CAAP;AAYH,S,QAEDU,M,GAAS,gBAAQ;AACb,kBAAKC,QAAL,CAAc;AACVX,yBAASY,KAAKZ,OADJ;AAEVC,qDAAYW,KAAKX,MAAjB;AAFU,aAAd;AAIH,S;;;;;;;AAED;;;;;;4CAMoB;AAAA;;AAChBY,kBAAM,mBAAN,EACKC,IADL,CACU,eAAO;AACT,uBAAOC,IAAIC,IAAJ,EAAP;AACH,aAHL,EAIKF,IAJL,CAIU,gBAAQ;AACV,uBAAKJ,MAAL,CAAYM,IAAZ;AACH,aANL;AAOH;;;iCAEQ;AAAA,yBACqB,KAAKjB,KAD1B;AAAA,gBACEE,MADF,UACEA,MADF;AAAA,gBACUD,OADV,UACUA,OADV;;AAELiB,oBAAQC,GAAR,CAAY,KAAKC,KAAjB;;AAEA,mBACI;AAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,4EAAC,qEAAD,IAAU,OAAO,cAAjB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAEKlB,uBAAOmB,MAAP,GAAgB,CAAhB,GAAoB;AAAC,qFAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,yBAAKlB,YAAL,CAAkBD,MAAlB,EAA0BD,OAA1B;AAAP,iBAApB,GAAwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAF7E,aADJ;;AAOA,gBAAIC,MAAJ,EAAY;AACR,uBACI;AAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,gFAAC,qEAAD,IAAU,OAAO,cAAjB;AAAA;AAAA;AAAA;AAAA,sBADJ;AAEKA,2BAAOmB,MAAP,GAAgB,CAAhB,GAAoB;AAAC,yFAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,6BAAKlB,YAAL,CAAkBD,MAAlB,EAA0BD,OAA1B;AAAP,qBAApB,GAAwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAF7E,iBADJ;AAMH,aAPD,MAOO;AACH,uBACI;AAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,gFAAC,qEAAD,IAAU,OAAO,cAAjB;AAAA;AAAA;AAAA;AAAA,sBADJ;AAEI,gFAAC,oEAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,iBADJ;AAMH;AACJ;;;;;;;;;EAtEmB,gD;;eAyETF,S;;;AAAf;;;;;;;;;;;;4BA/EMH,O;4BAMAG,S","file":"5.d8f5411baf2aa1343380.hot-update.js","sourcesContent":["import react, {Component} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Loading from '../components/Loading';\r\nimport TitleBar from '../components/TitleBar';\r\nimport Grid from '../components/Grid';\r\nimport ImageLink from '../components/ImageLink';\r\n\r\nconst Wrapper = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nclass IndexPage extends Component {\r\n    state = {\r\n        baseUrl: '',\r\n        albums: [],\r\n    };\r\n\r\n    createAlbums = (albums, baseUrl) => {\r\n        return albums.map(({id, title, photos}) => {\r\n            return (\r\n                <ImageLink\r\n                    key={id}\r\n                    id={id}\r\n                    link={{pathname: '/album', query: {id}}}\r\n                    title={title}\r\n                    imageUrl={photos[0].url}\r\n                    baseUrl={baseUrl}\r\n                />\r\n            );\r\n        });\r\n    };\r\n\r\n    update = data => {\r\n        this.setState({\r\n            baseUrl: data.baseUrl,\r\n            albums: [...data.albums],\r\n        });\r\n    };\r\n\r\n    /* getInitialProps = async ({req}) => {\r\n        const res = await fetch('static/data.json');\r\n        const json = await res.json();\r\n        this.update(data);\r\n    }; */\r\n\r\n    componentDidMount() {\r\n        fetch('/static/data.json')\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(json => {\r\n                this.update(json);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {albums, baseUrl} = this.state;\r\n        console.log(this.props);\r\n\r\n        return (\r\n            <Wrapper>\r\n                <TitleBar title={'React Photos'} />\r\n                {albums.length > 0 ? <Grid>{this.createAlbums(albums, baseUrl)}</Grid> : <p>No Albums</p>}\r\n            </Wrapper>\r\n        );\r\n\r\n        if (albums) {\r\n            return (\r\n                <Wrapper>\r\n                    <TitleBar title={'React Photos'} />\r\n                    {albums.length > 0 ? <Grid>{this.createAlbums(albums, baseUrl)}</Grid> : <p>No Albums</p>}\r\n                </Wrapper>\r\n            );\r\n        } else {\r\n            return (\r\n                <Wrapper>\r\n                    <TitleBar title={'React Photos'} />\r\n                    <Loading />\r\n                </Wrapper>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default IndexPage;\r\n\n\n\n// WEBPACK FOOTER //\n// ./pages/index.js"],"sourceRoot":""}