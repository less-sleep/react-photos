{"version":3,"sources":["webpack:///./pages/album.js?65d0"],"names":["Wrapper","styled","div","AlbumPage","state","baseUrl","album","undefined","createPhotos","photos","map","id","title","url","pathname","query","albumId","photoId","update","props","setState","data","_find","albums","fetch","then","res","json","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAMA,UAAU,kEAAAC,CAAOC,GAAjB;AAAA;AAAA;AAAA,iDAAN;;IAMMC,S;;;;;;;;;;;;;;gMACFC,K,GAAQ;AACJC,qBAAS,EADL;AAEJC,mBAAOC;AAFH,S,QAKRC,Y,GAAe,UAACC,MAAD,EAASJ,OAAT,EAAqB;AAAA,gBACzBC,KADyB,GAChB,MAAKF,KADW,CACzBE,KADyB;;;AAGhC,mBAAOG,OAAOC,GAAP,CAAW,iBAAsB;AAAA,oBAApBC,EAAoB,SAApBA,EAAoB;AAAA,oBAAhBC,KAAgB,SAAhBA,KAAgB;AAAA,oBAATC,GAAS,SAATA,GAAS;;AACpC,uBACI,4DAAC,sEAAD;AACI,yBAAKF,EADT;AAEI,wBAAIA,EAFR;AAGI,0BAAM,EAACG,UAAU,QAAX,EAAqBC,OAAO,EAACC,SAASV,MAAMK,EAAhB,EAAoBM,SAASN,EAA7B,EAA5B,EAHV;AAII,2BAAOC,KAJX;AAKI,8BAAUC,GALd;AAMI,6BAASR,OANb;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAUH,aAXM,CAAP;AAYH,S,QAEDa,M,GAAS,gBAAQ;AAAA,gBACNL,GADM,GACC,MAAKM,KADN,CACNN,GADM;;;AAGb,kBAAKO,QAAL,CAAc;AAAA,uBAAO;AACjBf,6BAASgB,KAAKhB,OADG;AAEjBC,2BAAO,mDAAAgB,CAAMD,KAAKE,MAAX,EAAmB,EAACZ,IAAIE,IAAIE,KAAJ,CAAUJ,EAAf,EAAnB;AAFU,iBAAP;AAAA,aAAd;AAIH,S;;;;;;;AAED;;;;;;4CAMoB;AAAA;;AAChBa,kBAAM,mBAAN,EACKC,IADL,CACU,eAAO;AACT,uBAAOC,IAAIC,IAAJ,EAAP;AACH,aAHL,EAIKF,IAJL,CAIU,gBAAQ;AACV,uBAAKP,MAAL,CAAYS,IAAZ;AACH,aANL;AAOH;;;iCAEQ;AAAA,yBACoB,KAAKvB,KADzB;AAAA,gBACEE,KADF,UACEA,KADF;AAAA,gBACSD,OADT,UACSA,OADT;;AAEL,gBAAMI,SAASH,QAAQA,MAAMG,MAAd,GAAuB,EAAtC;;AAEA,gBAAIH,KAAJ,EAAW;AACP,uBACI;AAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,gFAAC,qEAAD,IAAU,OAAO,cAAjB;AAAA;AAAA;AAAA;AAAA,sBADJ;AAEI,gFAAC,qEAAD,IAAU,OAAOA,MAAMM,KAAvB,EAA8B,UAAU,GAAxC;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAGKH,2BAAOmB,MAAP,GAAgB,CAAhB,GAAoB;AAAC,yFAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,6BAAKpB,YAAL,CAAkBC,MAAlB,EAA0BJ,OAA1B;AAAP,qBAApB,GAAwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAH7E,iBADJ;AAOH,aARD,MAQO;AACH,uBACI;AAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,gFAAC,qEAAD,IAAU,OAAO,cAAjB;AAAA;AAAA;AAAA;AAAA,sBADJ;AAEI,gFAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,iBADJ;AAMH;AACJ;;;;;;;;;EApEmB,gD;;eAuETF,S;;;AAAf;;;;;;;;;;;;4BA7EMH,O;4BAMAG,S","file":"4.7e0838e3ab3c7d79630d.hot-update.js","sourcesContent":["import react, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport _find from 'lodash/find';\r\n\r\nimport TitleBar from '../components/TitleBar';\r\nimport Grid from '../components/Grid';\r\nimport ImageLink from '../components/ImageLink';\r\n\r\nconst Wrapper = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nclass AlbumPage extends Component {\r\n    state = {\r\n        baseUrl: '',\r\n        album: undefined,\r\n    };\r\n\r\n    createPhotos = (photos, baseUrl) => {\r\n        const {album} = this.state;\r\n\r\n        return photos.map(({id, title, url}) => {\r\n            return (\r\n                <ImageLink\r\n                    key={id}\r\n                    id={id}\r\n                    link={{pathname: '/photo', query: {albumId: album.id, photoId: id}}}\r\n                    title={title}\r\n                    imageUrl={url}\r\n                    baseUrl={baseUrl}\r\n                />\r\n            );\r\n        });\r\n    };\r\n\r\n    update = data => {\r\n        const {url} = this.props;\r\n\r\n        this.setState(() => ({\r\n            baseUrl: data.baseUrl,\r\n            album: _find(data.albums, {id: url.query.id}),\r\n        }));\r\n    };\r\n\r\n    /* getInitialProps = async ({req}) => {\r\n        const res = await fetch('static/data.json');\r\n        const json = await res.json();\r\n        this.update(data);\r\n    }; */\r\n\r\n    componentDidMount() {\r\n        fetch('/static/data.json')\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(json => {\r\n                this.update(json);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {album, baseUrl} = this.state;\r\n        const photos = album ? album.photos : [];\r\n\r\n        if (album) {\r\n            return (\r\n                <Wrapper>\r\n                    <TitleBar title={'React Photos'} />\r\n                    <TitleBar title={album.title} backLink={'/'} />\r\n                    {photos.length > 0 ? <Grid>{this.createPhotos(photos, baseUrl)}</Grid> : <p>No Photos</p>}\r\n                </Wrapper>\r\n            );\r\n        } else {\r\n            return (\r\n                <Wrapper>\r\n                    <TitleBar title={'React Photos'} />\r\n                    <Loading />\r\n                </Wrapper>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default AlbumPage;\r\n\n\n\n// WEBPACK FOOTER //\n// ./pages/album.js"],"sourceRoot":""}